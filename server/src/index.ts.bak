export interface Env { FR24_KEY: string }

export default {
  async fetch(request: Request, env: Env): Promise<Response> {
    const url = new URL(request.url)

    if (url.pathname === '/health') return new Response('ok', { status: 200 })

    if (url.pathname.startsWith('/api/flight')) {
      const callsign   = url.searchParams.get('callsign') ?? ''
      const full       = url.searchParams.get('full') ?? 'false'
      const searchType = url.searchParams.get('searchType') ?? 'callsign'
      if (!callsign) {
        return new Response(JSON.stringify({ error:'Missing callsign' }), {
          status: 400, headers:{ 'content-type':'application/json' }
        })
      }

      // Build upstream URL with FR24 API key
  const upstream = `https://api.flightradar24.com/common/v1/flight/list?query=${encodeURIComponent(callsign)}      const upstream = `https://api.flightradar24.com/common/v1/search.json?key=${encodeURIComponent(env.FR24_KEY)}&callsign=${encodeURIComponent(callsign)}&full=${full}&searchType=${searchType}`fetchBy=flight      const upstream = `https://api.flightradar24.com/common/v1/search.json?key=${encodeURIComponent(env.FR24_KEY)}&callsign=${encodeURIComponent(callsign)}&full=${full}&searchType=${searchType}`page=1      const upstream = `https://api.flightradar24.com/common/v1/search.json?key=${encodeURIComponent(env.FR24_KEY)}&callsign=${encodeURIComponent(callsign)}&full=${full}&searchType=${searchType}`limit=1`;
  console.log('UPSTREAM', upstream);
      const res = await fetch(upstream, { headers: { 'accept':'application/json' }})
      const body = await res.text()
      return new Response(body, {
        status: res.status,
        headers: {
          'content-type': res.headers.get('content-type') ?? 'application/json',
          'access-control-allow-origin': '*'
        }
      })
    }

    return new Response('not found', { status: 404 })
  }
}
